"""
FileName = PythonTableModule.py

TODO:
  *Center the values in the fields
  *Add support for headings
"""
sampleList = [] #Testing List

for index in range(1,126): #Populating Test List
  sampleList.append(str(index))

midStr = "" #midStr holds the formated contents of the list
numOfCol = 6 #Desired number of colomns
colCount = 1 #Keeps track of how many colomns are generated
rowCount = 1 #Keeps track of how many rows are generated
valCount = 0 #Keeps track of how many values are added to midStr
maxLen = 0 #Holds the value of the longest value in terms of characters

for index in range(len(sampleList)): #Iterate through the list
  currLen = len(str(sampleList[index])) #Length of the current value string
  if currLen > maxLen: #Finds the length of the longest value string
    maxLen = currLen

for index in range(len(sampleList)): #Iterate through the list
  currLen = len(str(sampleList[index])) #Length if the curent value string
  currStr = str(sampleList[index]) #Holds the current value string

  if currLen != maxLen: #Adds spaces such that all value strings are the same length
    for index in range(maxLen-currLen):
      currStr = currStr + ' '
  
  if colCount - 1 != numOfCol + 1: #If not ever value has been added to this row
    if index != len(sampleList): 
      midStr += "| {} "
    if index == len(sampleList):
      midStr += "|    "

  if colCount == numOfCol + 1:
    midStr += "|" +'\n'
    rowCount += 1
    colCount = 0

  midStr = midStr.format(currStr)
   
  colCount += 1
  valCount += 1

if valCount != (numOfCol * rowCount): # This mean there are empty fields
  for index in range((numOfCol + 1) * rowCount - valCount):
    midStr += "|  "
    for index in range(maxLen):
      midStr += " "
  midStr += "|"
topAndBotStr = ""

splitMidStr = midStr.split('\n')
displayList = []


for line in splitMidStr:
  if line != '':
    displayList.append(line)

for index in range(len(splitMidStr[0])):
  topAndBotStr += "-"

print(topAndBotStr)
for line in displayList:
  print(line)
  print(topAndBotStr)
